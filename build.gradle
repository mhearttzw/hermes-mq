plugins {
    id 'io.spring.dependency-management' version '1.1.4' apply false
}

allprojects {
    group = 'com.echelon.hermes'
    version = '0.0.1-SNAPSHOT'

    repositories {
        maven {
            url = uri("https://maven.aliyun.com/repository/public")
        }
        mavenCentral()
    }
}

// 版本号必须卸载plugins之后
ext {
    nettyVersion = '4.1.86.Final'
    logbackVersion = '1.2.11'
//    gsonVersion = '2.10.1'
//    fastjsonVersion = '2.0.47' // <-- 添加fastjson2的版本（使用一个较新的稳定版）
    jacksonVersion = '2.14.1' // <-- 添加Jackson版本
    junitVersion = '5.9.1'
    mockitoVersion = '4.8.1'
    lombokVersion = '1.18.30'
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    // 3.3. 使用插件提供的 dependencyManagement 功能
    dependencyManagement {
        dependencies {
            dependency "io.netty:netty-handler:${rootProject.ext.nettyVersion}"
            dependency "ch.qos.logback:logback-classic:${rootProject.ext.logbackVersion}"
//            dependency 'com.google.code.gson:gson:2.10.1'
            // fastjson2
//            dependency "com.alibaba.fastjson2:fastjson2:${rootProject.ext.fastjsonVersion}"
            dependency "com.fasterxml.jackson.core:jackson-databind:${rootProject.ext.jacksonVersion}"
            dependency "com.fasterxml.jackson.core:jackson-annotations:${rootProject.ext.jacksonVersion}"

            // 测试库
            dependency 'org.junit.jupiter:junit-jupiter-api:5.9.1'
            dependency 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
            dependency 'org.mockito:mockito-core:4.8.1'
        }
    }

    // 3.4. 添加所有模块都需要的通用依赖
    dependencies {
        // 1. 添加 compileOnly 依赖
        // compileOnly 表示这个依赖只在编译时需要，不要打包到最终的产物中。
        // Lombok生成的代码在编译后就已经是标准的Java字节码了，运行时不再需要Lombok库。
        compileOnly "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"


        // 2. 添加 annotationProcessor
        // 这会告诉编译器使用Lombok的注解处理器
        annotationProcessor "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"


        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation 'org.mockito:mockito-core'


        // 为测试代码也启用Lombok
        testCompileOnly "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"

    }

    // 3.5. 配置测试任务
    tasks.withType(Test) {
        useJUnitPlatform()
    }
}


